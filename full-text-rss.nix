{ pkgs, lib, ... }:

{
  virtualisation.docker = {
    enable = true;
    autoPrune.enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  virtualisation.oci-containers.containers."full-test-rss" = {
    image = "heussd/fivefilters-full-text-rss:latest";
    ports = [ "50000:80/tcp" ];
    log-driver = "journald";
    extraOptions =
      [ "--network-alias=full-test-rss" "--network=freshrss_default" ];
  };
  systemd.services."docker-full-test-rss" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    after = [ "docker-network-freshrss_default.service" ];
    requires = [ "docker-network-freshrss_default.service" ];
    partOf = [ "docker-compose-freshrss-root.target" ];
    wantedBy = [ "docker-compose-freshrss-root.target" ];
  };

  systemd.services."docker-network-freshrss_default" = {
    path = [ pkgs.docker ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "docker network rm -f freshrss_default";
    };
    script = ''
      docker network inspect freshrss_default || docker network create freshrss_default
    '';
    partOf = [ "docker-compose-freshrss-root.target" ];
    wantedBy = [ "docker-compose-freshrss-root.target" ];
  };

  systemd.targets."docker-compose-freshrss-root" = {
    unitConfig = { Description = "Root target generated by compose2nix."; };
    wantedBy = [ "multi-user.target" ];
  };
}
